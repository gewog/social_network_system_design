openapi: 3.0.3
info:
  title: VKontakte Social Network API
  description: |
    REST API –¥–ª—è —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏ –í–ö–æ–Ω—Ç–∞–∫—Ç–µ. –ü–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç –ø—É–±–ª–∏–∫–∞—Ü–∏–∏, –º–µ–¥–∏–∞, —á–∞—Ç—ã –∏ —Å–æ–æ–±—â–µ–Ω–∏—è.
    –†–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ –ø–æ –ø—Ä–∏–Ω—Ü–∏–ø–∞–º OpenAPI 3.0.
  version: 1.0.0
  contact:
    name: VK API Team
    email: api@vk.com
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
servers:
  - url: https://api.vk.com/v1
    description: Production server
  - url: https://api.vk.dev/v1
    description: Development server

tags:
  - name: posts
    description: –†–∞–±–æ—Ç–∞ —Å –ø–æ—Å—Ç–∞–º–∏ –∏ –º–µ–¥–∏–∞
  - name: messages
    description: –†–∞–±–æ—Ç–∞ —Å —á–∞—Ç–∞–º–∏ –∏ —Å–æ–æ–±—â–µ–Ω–∏—è–º–∏
  - name: users
    description: –û–ø–µ—Ä–∞—Ü–∏–∏ —Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è–º–∏ (–¥—Ä—É–∑—å—è, –ø—Ä–æ—Ñ–∏–ª—å)

security:
  - bearerAuth: []

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

  schemas:
    User:
      type: object
      properties:
        id:
          type: string
          example: "usr_123"
        name:
          type: string
          example: "–ò–≤–∞–Ω –ü–µ—Ç—Ä–æ–≤"
        avatar_url:
          type: string
          format: uri
          example: "https://vk.com/avatars/123.jpg"

    Media:
      type: object
      properties:
        id:
          type: string
          example: "media_456"
        url:
          type: string
          format: uri
          example: "https://vk.com/media/456.jpg"
        type:
          type: string
          enum: [image, video, audio]
          example: "image"

    Post:
      type: object
      properties:
        id:
          type: string
          example: "post_789"
        author:
          $ref: '#/components/schemas/User'
        title:
          type: string
          example: "–ú–æ–π –¥–µ–Ω—å"
        text:
          type: string
          example: "–û—Ç–ª–∏—á–Ω—ã–π –¥–µ–Ω—å —Å–µ–≥–æ–¥–Ω—è!"
        media:
          type: array
          items:
            $ref: '#/components/schemas/Media'
        likes_count:
          type: integer
          example: 42
        comments_count:
          type: integer
          example: 5
        shares_count:
          type: integer
          example: 3
        created_at:
          type: string
          format: date-time
          example: "2025-04-05T12:00:00Z"

    Message:
      type: object
      properties:
        id:
          type: string
          example: "msg_101"
        chat_id:
          type: string
          example: "chat_202"
        sender:
          $ref: '#/components/schemas/User'
        text:
          type: string
          example: "–ü—Ä–∏–≤–µ—Ç!"
        media:
          $ref: '#/components/schemas/Media'
        emoji:
          type: string
          example: "üëç"
        status:
          type: string
          enum: [sent, delivered, read]
          example: "read"
        sent_at:
          type: string
          format: date-time
          example: "2025-04-05T12:05:00Z"
        received_at:
          type: string
          format: date-time
          example: "2025-04-05T12:05:01Z"

    PaginatedPosts:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Post'
        pagination:
          type: object
          properties:
            offset:
              type: integer
              example: 0
            limit:
              type: integer
              example: 10
            total:
              type: integer
              example: 150

    PaginatedMessages:
      type: object
      properties:
        data:
          type: array
          items:
            $ref: '#/components/schemas/Message'
        pagination:
          type: object
          properties:
            offset:
              type: integer
              example: 0
            limit:
              type: integer
              example: 20

paths:
  /posts:
    post:
      tags: [posts]
      summary: –°–æ–∑–¥–∞—Ç—å –Ω–æ–≤—ã–π –ø–æ—Å—Ç
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [title, text]
              properties:
                title:
                  type: string
                text:
                  type: string
                media_ids:
                  type: array
                  items:
                    type: string
      responses:
        '201':
          description: –ü–æ—Å—Ç —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Post'
        '400':
          description: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ
        '401':
          description: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
      security:
        - bearerAuth: []

    get:
      tags: [posts]
      summary: –ü–æ–ª—É—á–∏—Ç—å –ª–µ–Ω—Ç—É –ø–æ—Å—Ç–æ–≤ (—Å –ø–∞–≥–∏–Ω–∞—Ü–∏–µ–π)
      parameters:
        - name: offset
          in: query
          schema:
            type: integer
            default: 0
        - name: limit
          in: query
          schema:
            type: integer
            default: 10
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –ø–æ—Å—Ç–æ–≤
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPosts'
        '401':
          description: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω

  /posts/{id}/media:
    post:
      tags: [posts]
      summary: –ó–∞–≥—Ä—É–∑–∏—Ç—å –º–µ–¥–∏–∞ –¥–ª—è –ø–æ—Å—Ç–∞
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                file:
                  type: string
                  format: binary
      responses:
        '201':
          description: –ú–µ–¥–∏–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–æ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Media'
        '400':
          description: –§–∞–π–ª –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ—Ç—Å—è
        '404':
          description: –ü–æ—Å—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω

  /chats:
    get:
      tags: [messages]
      summary: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥–∏–∞–ª–æ–≥–æ–≤
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ —á–∞—Ç–æ–≤
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: string
                    user:
                      $ref: '#/components/schemas/User'
                    last_message:
                      $ref: '#/components/schemas/Message'
                    unread_count:
                      type: integer
        '401':
          description: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω

  /chats/{chatId}/messages:
    get:
      tags: [messages]
      summary: –ü–æ–ª—É—á–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏—è –≤ —á–∞—Ç–µ
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
        - name: limit
          in: query
          schema:
            type: integer
            default: 20
      responses:
        '200':
          description: –°–æ–æ–±—â–µ–Ω–∏—è –∏–∑ —á–∞—Ç–∞
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMessages'

    post:
      tags: [messages]
      summary: –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç
      parameters:
        - name: chatId
          in: path
          required: true
          schema:
            type: string
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required: [text]
              properties:
                text:
                  type: string
                media_id:
                  type: string
                emoji:
                  type: string
      responses:
        '201':
          description: –°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
        '404':
          description: –ß–∞—Ç –Ω–µ –Ω–∞–π–¥–µ–Ω
  /friends:
    get:
      tags: [ users ]
      summary: –ü–æ–ª—É—á–∏—Ç—å —Å–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      responses:
        '200':
          description: –°–ø–∏—Å–æ–∫ –¥—Ä—É–∑–µ–π
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '401':
          description: –ù–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω

    post:
      tags: [ users ]
      summary: –î–æ–±–∞–≤–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –≤ –¥—Ä—É–∑—å—è
      parameters:
        - name: user_id
          in: query
          required: true
          schema:
            type: string
      responses:
        '201':
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –¥–æ–±–∞–≤–ª–µ–Ω –≤ –¥—Ä—É–∑—å—è
        '400':
          description: –ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID
        '409':
          description: –£–∂–µ –≤ –¥—Ä—É–∑—å—è—Ö

  /friends/{user_id}:
    delete:
      tags: [ users ]
      summary: –£–¥–∞–ª–∏—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –¥—Ä—É–∑–µ–π
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: string
      responses:
        '204':
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–¥–∞–ª—ë–Ω –∏–∑ –¥—Ä—É–∑–µ–π
        '404':
          description: –î—Ä—É–≥ –Ω–µ –Ω–∞–π–¥–µ–Ω

  /users/{id}:
    get:
      tags: [ users ]
      summary: –ü–æ–ª—É—á–∏—Ç—å –∞–Ω–∫–µ—Ç—É –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: –î–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω